/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.algoritmos;
import controlador.random;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 *
 * @author Fox
 */
public class inicio extends javax.swing.JFrame {

    ArrayList listax = new ArrayList();
    ArrayList listay = new ArrayList();

    /**
     *
     * Creates new form inicio
     */
    public inicio() {
        initComponents();
        btordenar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cboalgoritmo = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        cbonumero = new javax.swing.JComboBox();
        cbotipo = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        btordenar = new javax.swing.JButton();
        cboorden = new javax.swing.JComboBox();
        label1 = new java.awt.Label();
        btlimpiar = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtordenados = new javax.swing.JEditorPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtdesordenados = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Analisis de Algoritmos");
        setName("inicio"); // NOI18N
        setSize(new java.awt.Dimension(1000, 500));

        jLabel1.setText("Algoritmo");

        cboalgoritmo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Burbuja", "Burbuja Mejorada", "QuickSort", "InsertSort", "Seleccion", "ShellSort", "MargeSort" }));

        jButton1.setText("Generar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cbonumero.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "10", "50", "100", "500", "1000", "5000", "10.000", "25.000", "50.000", "75.000", "100.000", "250.000", "500.000", "750.000", "1.000.000", "2.500.000", "5.000.000", "7.500.000", "10.000.000" }));

        cbotipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Random", "Random No repetidos", "Menor a mayor", "Mayor a menor" }));

        jLabel3.setText("NÂº Datos");

        btordenar.setText("Ordenar");
        btordenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btordenarActionPerformed(evt);
            }
        });

        cboorden.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Menor a Mayor", "Mayor a menor" }));

        label1.setText("Ordenar");

        btlimpiar.setText("Limpiar");
        btlimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlimpiarActionPerformed(evt);
            }
        });

        jScrollPane5.setViewportView(txtordenados);

        jScrollPane2.setViewportView(txtdesordenados);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(btlimpiar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbotipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel3)))
                                .addGap(75, 75, 75)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboorden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboalgoritmo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(cbonumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btordenar)
                                .addGap(100, 100, 100))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbotipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(cboalgoritmo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboorden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbonumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btordenar)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btlimpiar)
                .addGap(167, 167, 167))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        btordenar.setEnabled(true);
        listay.clear();
        listax.clear();
        if (cbotipo.getSelectedItem() == "Random") {
            random r = new random();

            if (cbonumero.getSelectedItem() == "Seleccionar") {

                JOptionPane.showMessageDialog(null, "debe seleccionar un numero", "Error", JOptionPane.ERROR_MESSAGE);

            } else {
                txtdesordenados.setText("");
            }

            if (cbonumero.getSelectedItem() == "10") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista = new ArrayList();

                lista = r.generardiez();

                for (int i = 0; i < lista.size(); i++) {
                    listax.add(lista.get(i));
                    listay.add(lista.get(i));
                    listModel.add(i, lista.get(i));
                    txtdesordenados.setText(listModel.toString() + "\n");

                }

            }

            if (cbonumero.getSelectedItem() == "50") {

                ArrayList lista = new ArrayList();

                lista = r.generarcincuenta();

                for (int i = 0; i < lista.size(); i++) {
                    listax.add(lista.get(i));
                    listay.add(lista.get(i));

                }
                txtdesordenados.setText(lista.toString());
            }

            if (cbonumero.getSelectedItem() == "100") {
                ArrayList lista2 = new ArrayList();
                lista2 = r.generarcien();
                for (int i = 0; i < lista2.size(); i++) {
                    listax.add(lista2.get(i));
                    listay.add(lista2.get(i));

                }
                txtdesordenados.setText(lista2.toString());
            }

            if (cbonumero.getSelectedItem() == "500") {

                ArrayList lista2 = new ArrayList();
                lista2 = r.generarquinientos();
                txtdesordenados.setText(lista2.toString());
                for (int i = 0; i < lista2.size(); i++) {
                    listax.add(lista2.get(i));
                    listay.add(lista2.get(i));

                }

            }

            if (cbonumero.getSelectedItem() == "1000") {

                ArrayList lista3 = new ArrayList();

                lista3 = r.generarmil();
                txtdesordenados.setText(lista3.toString());
                for (int i = 0; i < lista3.size(); i++) {
                    listax.add(lista3.get(i));
                    listay.add(lista3.get(i));

                }

            }

            if (cbonumero.getSelectedItem() == "5000") {

                ArrayList lista3 = new ArrayList();

                lista3 = r.generacincormil();
                txtdesordenados.setText(lista3.toString());
                for (int i = 0; i < lista3.size(); i++) {
                    listax.add(lista3.get(i));
                    listay.add(lista3.get(i));

                }

            }

            if (cbonumero.getSelectedItem() == "10.000") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista3 = new ArrayList();

                lista3 = r.generardiezmil();
                for (int i = 0; i < lista3.size(); i++) {
                    listax.add(lista3.get(i));
                    listay.add(lista3.get(i));
                    //listModel.add(i, lista3.get(i));
                    //txtdesordenados.setText(listModel.toString());

                }

                txtdesordenados.setText(lista3.toString());

            }

            if (cbonumero.getSelectedItem() == "25.000") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista3 = new ArrayList();

                lista3 = r.generardorveinticincomil();
                for (int i = 0; i < lista3.size(); i++) {
                    listax.add(lista3.get(i));
                    listay.add(lista3.get(i));
                    //listModel.add(i, lista3.get(i));
                    //txtdesordenados.setText(listModel.toString());

                }

                txtdesordenados.setText(lista3.toString());

            }

            if (cbonumero.getSelectedItem() == "50.000") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista100 = new ArrayList();
                int x = 0;
                lista100 = r.generarciencuamil();
                for (int i = 0; i < lista100.size(); i++) {

                    listax.add(lista100.get(i));
                    listay.add(lista100.get(i));
                    listModel.add(i, lista100.get(i));
                    //txtdesordenados.setText(listModel.toString());

                    x = lista100.lastIndexOf(i);

                }

                txtdesordenados.setText(lista100.toString());

            }

            if (cbonumero.getSelectedItem() == "75.000") {
              
                ArrayList lista100 = new ArrayList();

                lista100 = r.generarsetentaycinco();
                for (int i = 0; i < lista100.size(); i++) {

                    listax.add(lista100.get(i));
                    listay.add(lista100.get(i));

                }

                txtdesordenados.setText(lista100.toString());

            }
            if (cbonumero.getSelectedItem() == "100.000") {

                ArrayList lista100 = new ArrayList();

                lista100 = r.generarcienmil();
                for (int i = 0; i < lista100.size(); i++) {

                    listax.add(lista100.get(i));
                    listay.add(lista100.get(i));

                }

                txtdesordenados.setText(lista100.toString());

            }

            if (cbonumero.getSelectedItem() == "250.000") {

                ArrayList lista100 = new ArrayList();

                lista100 = r.generardocientoscincuentamil();
                for (int i = 0; i < lista100.size(); i++) {

                    listax.add(lista100.get(i));
                    listay.add(lista100.get(i));
                }

                txtdesordenados.setText(lista100.toString());

            }

            if (cbonumero.getSelectedItem() == "500.000") {

                ArrayList lista100 = new ArrayList();

                lista100 = r.generardorquinientosmil();
                for (int i = 0; i < lista100.size(); i++) {

                    listax.add(lista100.get(i));
                    listay.add(lista100.get(i));

                }

                txtdesordenados.setText(lista100.toString());

            }

            if (cbonumero.getSelectedItem() == "750.000") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista100 = new ArrayList();
                lista100 = r.generardorsetecientoscincuentamil();
                for (int i = 0; i < lista100.size(); i++) {

                    listax.add(lista100.get(i));
                    listay.add(lista100.get(i));

                }

                txtdesordenados.setText(lista100.toString());

            }

            if (cbonumero.getSelectedItem() == "1.000.000") {

                ArrayList lista100 = new ArrayList();

                lista100 = r.generarmillon();
                txtdesordenados.setText(lista100.toString());
                for (int i = 0; i < lista100.size(); i++) {
                    listax.add(lista100.get(i));
                    listay.add(lista100.get(i));

                }

            }
            if (cbonumero.getSelectedItem() == "2.500.000") {

                ArrayList lista100 = new ArrayList();
                int x = 0;

                lista100 = r.generardosmillonesquinientos();
                txtdesordenados.setText(lista100.toString());
                for (int i = 0; i < lista100.size(); i++) {

                    listax.add(lista100.get(i));
                    listay.add(lista100.get(i));

                }

            }

            if (cbonumero.getSelectedItem() == "5.000.000") {

                ArrayList lista100 = new ArrayList();

                lista100 = r.generardorcincomillones();
                txtdesordenados.setText(lista100.toString());
                for (int i = 0; i < lista100.size(); i++) {

                    listax.add(lista100.get(i));
                    listay.add(lista100.get(i));

                }

            }

            if (cbonumero.getSelectedItem() == "7.500.000") {

                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista100 = new ArrayList();
                int x = 0;
                lista100 = r.generardorsietequinientos();
                txtdesordenados.setText(lista100.toString());
                for (int i = 0; i < lista100.size(); i++) {

                    listax.add(lista100.get(i));
                    listay.add(lista100.get(i));

                }

            }

            if (cbonumero.getSelectedItem() == "10.000.000") {

                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista100 = new ArrayList();
                int x = 0;
                lista100 = r.generardiezmillones();
                txtdesordenados.setText(lista100.toString());
                for (int i = 0; i < lista100.size(); i++) {

                    listax.add(lista100.get(i));
                    listay.add(lista100.get(i));

                }

            }

        }
        if (cbotipo.getSelectedItem() == "Random No repetidos") {
            //SIN REPETIR

            random r = new random();

            if (cbonumero.getSelectedItem() == "Seleccionar") {

                JOptionPane.showMessageDialog(null, "debe seleccionar un numero", "Error", JOptionPane.ERROR_MESSAGE);

            } else {
                txtdesordenados.setText("");
            }

            if (cbonumero.getSelectedItem() == "10") {

                ArrayList lista = new ArrayList();

                lista = r.generardiezsinrepetirse();
                for (int i = 0; i < lista.size(); i++) {
                    listax.add(lista.get(i));
                    listay.add(lista.get(i));

                }

                txtdesordenados.setText(lista.toString());

            }

            if (cbonumero.getSelectedItem() == "50") {

                ArrayList lista = new ArrayList();

                lista = r.generarcincuentasinrepetirse();
                for (int i = 0; i < lista.size(); i++) {
                    listax.add(lista.get(i));
                    listay.add(lista.get(i));

                }

                txtdesordenados.setText(lista.toString());

            }

            if (cbonumero.getSelectedItem() == "100") {
                ArrayList lista2 = new ArrayList();
                lista2 = r.generarcienlsinrepetirse();
                for (int i = 0; i < lista2.size(); i++) {
                    listax.add(lista2.get(i));
                    listay.add(lista2.get(i));

                }

                txtdesordenados.setText(lista2.toString());

            }

            if (cbonumero.getSelectedItem() == "500") {
                ArrayList lista2 = new ArrayList();
                lista2 = r.generarquinientossinrepetirse();
                for (int i = 0; i < lista2.size(); i++) {
                    listax.add(lista2.get(i));
                    listay.add(lista2.get(i));

                }

                txtdesordenados.setText(lista2.toString());

            }

            if (cbonumero.getSelectedItem() == "1000") {

                ArrayList lista3 = new ArrayList();

                lista3 = r.generarmilsinrepetirse();
                for (int i = 0; i < lista3.size(); i++) {
                    listax.add(lista3.get(i));
                    listay.add(lista3.get(i));

                }

                txtdesordenados.setText(lista3.toString());

            }

            if (cbonumero.getSelectedItem() == "5000") {

                ArrayList lista3 = new ArrayList();

                lista3 = r.generarcincomilsinrepetirse();
                for (int i = 0; i < lista3.size(); i++) {
                    listax.add(lista3.get(i));
                    listay.add(lista3.get(i));

                }

                txtdesordenados.setText(lista3.toString());

            }

            if (cbonumero.getSelectedItem() == "10.000") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista4 = new ArrayList();

                lista4 = r.generarDiezmilsinrepetirse();
                for (int i = 0; i < lista4.size(); i++) {
                    listax.add(lista4.get(i));
                    listay.add(lista4.get(i));

                }
                txtdesordenados.setText(lista4.toString());
            }

            if (cbonumero.getSelectedItem() == "25.000") {

                ArrayList lista3 = new ArrayList();

                lista3 = r.generarveinteycincomilsinrepetirse();
                for (int i = 0; i < lista3.size(); i++) {
                    listax.add(lista3.get(i));
                    listay.add(lista3.get(i));

                }

                txtdesordenados.setText(lista3.toString());

            }

            if (cbonumero.getSelectedItem() == "50.000") {

                ArrayList lista3 = new ArrayList();

                lista3 = r.generarcincuentamilsinrepetirse();
                for (int i = 0; i < lista3.size(); i++) {
                    listax.add(lista3.get(i));
                    listay.add(lista3.get(i));

                }

                txtdesordenados.setText(lista3.toString());

            }

            if (cbonumero.getSelectedItem() == "75.000") {

                ArrayList lista3 = new ArrayList();

                lista3 = r.generarsetentaycincomilsinrepetirse();
                for (int i = 0; i < lista3.size(); i++) {
                    listax.add(lista3.get(i));
                    listay.add(lista3.get(i));

                }

                txtdesordenados.setText(lista3.toString());

            }

            if (cbonumero.getSelectedItem() == "100.000") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista4 = new ArrayList();

                lista4 = r.generarCienmilsinrepetirse();
                for (int i = 0; i < lista4.size(); i++) {
                    listax.add(lista4.get(i));
                    listay.add(lista4.get(i));

                }

                txtdesordenados.setText(lista4.toString());

            }

            if (cbonumero.getSelectedItem() == "250.000") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista4 = new ArrayList();

                lista4 = r.generardoscincuentamilsinrepetirse();
                for (int i = 0; i < lista4.size(); i++) {
                    listax.add(lista4.get(i));
                    listay.add(lista4.get(i));

                }

                txtdesordenados.setText(lista4.toString());

            }

            if (cbonumero.getSelectedItem() == "500.000") {

                ArrayList lista4 = new ArrayList();

                lista4 = r.quinientosmilsinrepetirse();
                txtdesordenados.setText(lista4.toString());

                for (int i = 0; i < lista4.size(); i++) {
                    listax.add(lista4.get(i));
                    listay.add(lista4.get(i));

                }

            }

            if (cbonumero.getSelectedItem() == "750.000") {

                ArrayList lista4 = new ArrayList();

                lista4 = r.setencientoscincuentamilsinrepetirse();
                txtdesordenados.setText(lista4.toString());
                for (int i = 0; i < lista4.size(); i++) {
                    listax.add(lista4.get(i));
                    listay.add(lista4.get(i));

                }

            }

            if (cbonumero.getSelectedItem() == "1.000.000") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista4 = new ArrayList();

                lista4 = r.generarunmillonsinrepetirse();
                for (int i = 0; i < lista4.size(); i++) {
                    listax.add(lista4.get(i));
                    listay.add(lista4.get(i));

                }

                txtdesordenados.setText(lista4.toString());

            }

            if (cbonumero.getSelectedItem() == "2.500.000") {

                ArrayList lista4 = new ArrayList();

                lista4 = r.generardosmillonesquinientosinrepetirse();
                for (int i = 0; i < lista4.size(); i++) {
                    listax.add(lista4.get(i));
                    listay.add(lista4.get(i));

                }

                txtdesordenados.setText(lista4.toString());

            }

            if (cbonumero.getSelectedItem() == "5.000.000") {

                ArrayList lista4 = new ArrayList();

                lista4 = r.generarcincomillonessinrepetirse();
                for (int i = 0; i < lista4.size(); i++) {
                    listax.add(lista4.get(i));
                    listay.add(lista4.get(i));

                }

                txtdesordenados.setText(lista4.toString());

            }

            if (cbonumero.getSelectedItem() == "7.500.000") {

                ArrayList lista4 = new ArrayList();

                lista4 = r.generarsietemillonessquinientosinrepetirse();
                for (int i = 0; i < lista4.size(); i++) {
                    listax.add(lista4.get(i));
                    listay.add(lista4.get(i));

                }

                txtdesordenados.setText(lista4.toString());

            }

            if (cbonumero.getSelectedItem() == "10.000.000") {

                ArrayList lista4 = new ArrayList();

                lista4 = r.generardiezmillonesinrepetirse();
                for (int i = 0; i < lista4.size(); i++) {
                    listax.add(lista4.get(i));
                    listay.add(lista4.get(i));

                }

                txtdesordenados.setText(lista4.toString());

            }
        }

        if (cbotipo.getSelectedItem() == "Mayor a menor") {
            random r = new random();
            if (cbonumero.getSelectedItem() == "Seleccionar") {

                JOptionPane.showMessageDialog(null, "debe seleccionar un numero", "Error", JOptionPane.ERROR_MESSAGE);
                txtdesordenados.setText("");
            } else {

                if (cbonumero.getSelectedItem() == "10") {
                     listay = r.mayoramenor(10);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "50") {
                 listay = r.mayoramenor(50);
                    txtdesordenados.setText(listay.toString());

                }

                if (cbonumero.getSelectedItem() == "100") {
                  listay = r.mayoramenor(100);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "500") {
                 listay = r.mayoramenor(500);
                    txtdesordenados.setText(listay.toString());

                }

                if (cbonumero.getSelectedItem() == "1000") {
                    listay = r.mayoramenor(1000);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "5000") {
                   listay = r.mayoramenor(5000);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "10.000") {
                  listay = r.mayoramenor(10000);
                    txtdesordenados.setText(listay.toString());

                }

                if (cbonumero.getSelectedItem() == "25.000") {
                      listay = r.mayoramenor(25000);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "50.000") {
                       listay = r.mayoramenor(50000);
                    txtdesordenados.setText(listay.toString());

                }

                if (cbonumero.getSelectedItem() == "75.000") {
                  listay = r.mayoramenor(75000);
                    txtdesordenados.setText(listay.toString());

                }
                if (cbonumero.getSelectedItem() == "100.000") {
                     listay = r.mayoramenor(100000);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "250.000") {
                    listay = r.mayoramenor(250000);
                    txtdesordenados.setText(listay.toString());

                }

                if (cbonumero.getSelectedItem() == "500.000") {
                   listay = r.mayoramenor(500000);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "750.000") {
                       listay = r.mayoramenor(750000);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "1.000.000") {
                     listay = r.mayoramenor(1000000);
                    txtdesordenados.setText(listay.toString());
                }
                if (cbonumero.getSelectedItem() == "2.500.000") {
                  listay = r.mayoramenor(2500000);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "5.000.000") {
                       listay = r.mayoramenor(5000000);
                    txtdesordenados.setText(listay.toString());

                }

                if (cbonumero.getSelectedItem() == "7.500.000") {
                    listay = r.mayoramenor(7500000);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "10.000.000") {
                      listay = r.mayoramenor(10000000);
                    txtdesordenados.setText(listay.toString());
                }

            }

        }

        if (cbotipo.getSelectedItem() == "Menor a mayor") {
            random r = new random();
            if (cbonumero.getSelectedItem() == "Seleccionar") {

                JOptionPane.showMessageDialog(null, "debe seleccionar un numero", "Error", JOptionPane.ERROR_MESSAGE);
                txtdesordenados.setText("");
            } else {

                if (cbonumero.getSelectedItem() == "10") {

                    listay = r.menoramayor(10);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "50") {

                    listay = r.menoramayor(50);
                    txtdesordenados.setText(listay.toString());

                }

                if (cbonumero.getSelectedItem() == "100") {

                    listay = r.menoramayor(100);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "500") {
                    listay = r.menoramayor(500);
                    txtdesordenados.setText(listay.toString());

                }

                if (cbonumero.getSelectedItem() == "1000") {
                    listay = r.menoramayor(1000);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "5000") {
                    listay = r.menoramayor(5000);
                    txtdesordenados.setText(listay.toString());

                }

                if (cbonumero.getSelectedItem() == "10.000") {
                    listay = r.menoramayor(10000);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "25.000") {
                    listay = r.menoramayor(25000);
                    txtdesordenados.setText(listay.toString());

                }

                if (cbonumero.getSelectedItem() == "50.000") {
                    listay = r.menoramayor(50000);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "75.000") {
                    listay = r.menoramayor(75000);
                    txtdesordenados.setText(listay.toString());

                }
                if (cbonumero.getSelectedItem() == "100.000") {
                    listay = r.menoramayor(100000);
                    txtdesordenados.setText(listay.toString());;

                }

                if (cbonumero.getSelectedItem() == "250.000") {
                    listay = r.menoramayor(250000);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "500.000") {
                    listay = r.menoramayor(500000);
                    txtdesordenados.setText(listay.toString());

                }

                if (cbonumero.getSelectedItem() == "750.000") {
                    listay = r.menoramayor(750000);
                    txtdesordenados.setText(listay.toString());

                }

                if (cbonumero.getSelectedItem() == "1.000.000") {
                    listay = r.menoramayor(1000000);
                    txtdesordenados.setText(listay.toString());
                }
                if (cbonumero.getSelectedItem() == "2.500.000") {
                    listay = r.menoramayor(2500000);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "5.000.000") {
                    listay = r.menoramayor(5000000);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "7.500.000") {
                    listay = r.menoramayor(7500000);
                    txtdesordenados.setText(listay.toString());
                }

                if (cbonumero.getSelectedItem() == "10.000.000") {
                    listay = r.menoramayor(10000000);
                    txtdesordenados.setText(listay.toString());
                }
            }

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void btordenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btordenarActionPerformed

        algoritmos a = new algoritmos();

        if (cboorden.getSelectedItem() == "Mayor a menor") {
            txtordenados.setText("");
            if (cboalgoritmo.getSelectedItem() == "Seleccionar") {

                JOptionPane.showMessageDialog(null, "debe seleccionar un Algoritmo", "Error", JOptionPane.ERROR_MESSAGE);
                txtordenados.setText("");
            }
            if (cboalgoritmo.getSelectedItem() == "Burbuja") {

                ArrayList lista = new ArrayList();
                long tiempoInicio = System.currentTimeMillis();

                lista = a.burbujaMayoraMenor(listax);

                long totalTiempofin = System.currentTimeMillis();
                //long totalTiempo = totalTiempofin;
                long totalTiempo = totalTiempofin - tiempoInicio;

                txtordenados.setText(lista.toString());

                JOptionPane.showMessageDialog(null, "El tiempo de ejecucion es de " + totalTiempo + " Milisegundos", "Tiempo", JOptionPane.QUESTION_MESSAGE);
            }

            //BURBUJA MEJORADA*********************************************
            if (cboalgoritmo.getSelectedItem() == "Burbuja Mejorada") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista = new ArrayList();
                long tiempoInicio = System.currentTimeMillis();

                lista = a.burbujaMejoradaMayoraMenor(listax);

                long totalTiempo = System.currentTimeMillis() - tiempoInicio;

                txtordenados.setText(lista.toString());
                JOptionPane.showMessageDialog(null, "El tiempo de ejecucion es de " + totalTiempo + " Milisegundos", "Tiempo", JOptionPane.QUESTION_MESSAGE);
            }

            //**************QuickSort*******************
            if (cboalgoritmo.getSelectedItem() == "QuickSort") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista = new ArrayList();
                long tiempoInicio = System.currentTimeMillis();

                lista = a.insertionSort(listax);

                long totalTiempo = System.currentTimeMillis() - tiempoInicio;

                txtordenados.setText(lista.toString());

                JOptionPane.showMessageDialog(null, "El tiempo de ejecucion es de " + totalTiempo + " Milisegundos", "Tiempo", JOptionPane.QUESTION_MESSAGE);
            }

            //***********INSERSort************
            if (cboalgoritmo.getSelectedItem() == "InsertSort") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista = new ArrayList();
                long tiempoInicio = System.currentTimeMillis();

                lista = a.insertionSort(listax);

                long totalTiempo = System.currentTimeMillis() - tiempoInicio;

                txtordenados.setText(lista.toString());

                JOptionPane.showMessageDialog(null, "El tiempo de ejecucion es de " + totalTiempo + " Milisegundos", "Tiempo", JOptionPane.QUESTION_MESSAGE);
            }
            //++++++++++++ Seleccion+++++++
            if (cboalgoritmo.getSelectedItem() == "Seleccion") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista = new ArrayList();
                long tiempoInicio = System.currentTimeMillis();

                lista = a.seleccion(listax);

                long totalTiempo = System.currentTimeMillis() - tiempoInicio;

                txtordenados.setText(lista.toString());

                JOptionPane.showMessageDialog(null, "El tiempo de ejecucion es de " + totalTiempo + " Milisegundos", "Tiempo", JOptionPane.QUESTION_MESSAGE);
            }

            if (cboalgoritmo.getSelectedItem() == "ShellSort") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista = new ArrayList();
                long tiempoInicio = System.currentTimeMillis();

                lista = a.shellSort(listax);

                long totalTiempo = System.currentTimeMillis() - tiempoInicio;

                txtordenados.setText(lista.toString());

                JOptionPane.showMessageDialog(null, "El tiempo de ejecucion es de " + totalTiempo + " Milisegundos", "Tiempo", JOptionPane.QUESTION_MESSAGE);
            }

            //++++++++MargeSort++++++++++++++
            if (cboalgoritmo.getSelectedItem() == "MargeSort") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista = new ArrayList();
                long tiempoInicio = System.currentTimeMillis();

                lista = a.mergeSort(listay);

                long totalTiempo = System.currentTimeMillis() - tiempoInicio;

                txtordenados.setText(lista.toString());

                JOptionPane.showMessageDialog(null, "El tiempo de ejecucion es de " + totalTiempo + " Milisegundos", "Tiempo", JOptionPane.QUESTION_MESSAGE);
            }
        } else {
            txtordenados.setText("");
            if (cboalgoritmo.getSelectedItem() == "Seleccionar") {

                JOptionPane.showMessageDialog(null, "debe seleccionar un Algoritmo", "Error", JOptionPane.ERROR_MESSAGE);
                txtordenados.setText("");
            }
            if (cboalgoritmo.getSelectedItem() == "Burbuja") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista = new ArrayList();

                long tiempoInicio = System.currentTimeMillis();

                lista = a.burbujaMenoraMayor(listay);

                long totalTiempofin = System.currentTimeMillis();
                //long totalTiempo = totalTiempofin;
                long totalTiempo = totalTiempofin - tiempoInicio;

                for (int i = 0; i < lista.size(); i++) {
                    System.out.println("" + lista.get(i));
                }

                JOptionPane.showMessageDialog(null, "El tiempo de ejecucion es de " + totalTiempo + " Milisegundos", "Tiempo", JOptionPane.QUESTION_MESSAGE);
                txtordenados.setText(lista.toString());
                
            }

            if (cboalgoritmo.getSelectedItem() == "Burbuja Mejorada") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista = new ArrayList();
                long tiempoInicio = System.currentTimeMillis();

                lista = a.burbujaMejoradaMenoraMayor(listay);

                long totalTiempofin = System.currentTimeMillis();

                long totalTiempo = totalTiempofin - tiempoInicio;

                JOptionPane.showMessageDialog(null, "El tiempo de ejecucion es de " + totalTiempo + " Milisegundos", "Tiempo", JOptionPane.QUESTION_MESSAGE);
                txtordenados.setText(lista.toString());

                
            }

            if (cboalgoritmo.getSelectedItem() == "QuickSort") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista = new ArrayList();
                long tiempoInicio = System.currentTimeMillis();

                lista = a.quicksortMenoraMayor(listay);

                long totalTiempofin = System.currentTimeMillis();
                //long totalTiempo = totalTiempofin;
                long totalTiempo = totalTiempofin - tiempoInicio;

                txtordenados.setText(lista.toString());
                JOptionPane.showMessageDialog(null, "El tiempo de ejecucion es de " + totalTiempo + " Milisegundos", "Tiempo", JOptionPane.QUESTION_MESSAGE);
            }

            if (cboalgoritmo.getSelectedItem() == "InsertSort") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista = new ArrayList();
                long tiempoInicio = System.currentTimeMillis();

                lista = a.insertionSortMenorMayor(listay);

                long totalTiempofin = System.currentTimeMillis();
                long totalTiempo = totalTiempofin - tiempoInicio;
                
                 JOptionPane.showMessageDialog(null, "El tiempo de ejecucion es de " + totalTiempo + " Milisegundos", "Tiempo", JOptionPane.QUESTION_MESSAGE);
                txtordenados.setText(lista.toString());
               

                
            }

            if (cboalgoritmo.getSelectedItem() == "ShellSort") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista = new ArrayList();
                long tiempoInicio = System.currentTimeMillis();

                lista = a.shellSortMenoraMayor(listay);

                long totalTiempofin = System.currentTimeMillis();

                long totalTiempo = totalTiempofin - tiempoInicio;

                txtordenados.setText(lista.toString());
                JOptionPane.showMessageDialog(null, "El tiempo de ejecucion es de " + totalTiempo + " Milisegundos", "Tiempo", JOptionPane.QUESTION_MESSAGE);
            }

            if (cboalgoritmo.getSelectedItem() == "Seleccion") {

                ArrayList lista = new ArrayList();
                long tiempoInicio = System.currentTimeMillis();

                lista = a.seleccionMenoraMayor(listay);

                long totalTiempo = System.currentTimeMillis() - tiempoInicio;
                JOptionPane.showMessageDialog(null, "El tiempo de ejecucion es de " + totalTiempo + " Milisegundos", "Tiempo", JOptionPane.QUESTION_MESSAGE);
                txtordenados.setText(lista.toString());
                
            }

            //++++++++MargeSort++++++++++++++
            if (cboalgoritmo.getSelectedItem() == "MargeSort") {
                DefaultListModel listModel = new DefaultListModel();
                ArrayList lista = new ArrayList();
                long tiempoInicio = System.currentTimeMillis();

                lista = a.mergeSort(listay);

                long totalFinal = System.currentTimeMillis();

                long totalTiempo = totalFinal - tiempoInicio;

                
                txtordenados.setText(lista.toString());
                JOptionPane.showMessageDialog(null, "El tiempo de ejecucion es de " + totalTiempo + " Milisegundos", "Tiempo", JOptionPane.QUESTION_MESSAGE);

                
            }
        }

// TODO add your handling code here:
    }//GEN-LAST:event_btordenarActionPerformed

    private void btlimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlimpiarActionPerformed
        txtdesordenados.setText("");
        txtordenados.setText("");
        btordenar.setEnabled(false);
        listax.clear();
        listay.clear();
// TODO add your handling code here:
    }//GEN-LAST:event_btlimpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inicio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inicio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inicio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inicio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btlimpiar;
    private javax.swing.JButton btordenar;
    private javax.swing.JComboBox cboalgoritmo;
    private javax.swing.JComboBox cbonumero;
    private javax.swing.JComboBox cboorden;
    private javax.swing.JComboBox cbotipo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private java.awt.Label label1;
    private javax.swing.JEditorPane txtdesordenados;
    private javax.swing.JEditorPane txtordenados;
    // End of variables declaration//GEN-END:variables
}
